// Embed content into hex array for in-memory caching

#include <cstring>
#include <map>
#include <memory>
#include <string>
#include <vector>

#include "xxd.h"

#define STR(val) #val

using namespace std;

// Note: xxd provides us with unsigned char data, so we initialize it this way
// and then cast to signed char for easiness.
static const unsigned char hex_content[] = { @CONTENT_HEX@, 0 };

class AddFile_@FILE_NAME_HASH@
{
	const char* file_name;

public :

	AddFile_@FILE_NAME_HASH@() : file_name("@FILE_NAME@")
	{
		if (!xxd.get())
			xxd.reset(new map<string, pair<const char*, size_t> >());

		xxd->emplace(file_name, std::make_pair(reinterpret_cast<const char*>(&hex_content[0]), sizeof(hex_content)));

		if (!xxd_mime.get())
			xxd_mime.reset(new map<string, string>());
		
		xxd_mime->emplace(file_name, STR(@FILE_MIME@));
	};
};

static AddFile_@FILE_NAME_HASH@ addFile_@FILE_NAME_HASH@;

